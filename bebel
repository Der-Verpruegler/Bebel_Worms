Basisfunktionalitäten:
_klasse Map(Auflösung):
	*map_generator() -> nparray & Field[]
	map[0,1] = Field(...)

_klasse main:
	map = Map(Auflösung)
	worms = Worm()
	gui = GUI(map, worms)
	mainLoop() Fragt periodisch User-Input ab und aktualisiert die GUI
		
_klasse Worm: ""Erzeugt Würmerliste""
	Coordinates coordinates "" links oben ""
	int health
	Size __size
	move(key_input):
		Kollision(Coordinates, Size)
		set_coordinates()
		
	bool selected
	int speed

_klasse Blaeher:
	list inventar
	dict waffen
	str selected_weapon

_klasse Weapon:
	damage()
	flugbahn()
	
_klasse GUI(colourMap, Worm):
	update() Ruft renderMap und renderWorms auf
	renderMap(colourMap)
	renderWorms(worms)
	
_klasse UI(): Prozessiert User-Input
	getEvents()


Next Meylensteyne:
__________________________________________________________________________________________
Clean-Up Sprint:
Refactoring
	* Readme nachziehen / Issues
Sprungfunktion
	* Richtungstaste ist bereits gedrückt, wenn Sprungtaste gedrückt wird: Sprung in Richtung
Collision checks
	(* Iterativ, falls man sich mehr als einen Pixel bewegt, der die Anzahl der noch möglichen Pixel zurückgibt)
	* Check auf Maprand oben und unten
Mehrere Würmer auf der Map mit Wechselfunktion
	* Tab Wurm wechseln
		* Wechseln nur innerhalb eines Teams
Temp Debug Map hinzufügen
	* Für schnellere Ladezeit
__________________________________________________________________________________________
Deathly Sprint:
Waffen
	* Prod
	* Bille (Opt: Mit Munni)
		* Schaden
Ui
	* Worm health
	* Total health
	* Weapon select option
__________________________________________________________________________________________	

